package textAdventure;

import java.util.ArrayList;
import java.util.HashMap;

public class Room {
	private String title; //name of item.
	private String description; // short description
	private String roomDesc;
	
	private String N,S,E,W,U,D; //exits: Cardinal directions + up/down
	private boolean air = true;
	boolean isLocked = false;
	boolean visited = false;
	String keyName;
	String[] exits = {N,S,E,W,U,D};
	
	ArrayList<Item> itemList = new ArrayList<Item>();
	
	Room(String title, String desc, String desc2) {
		this.title = title;
		this.description = desc;
		if(desc2 == ""){
			this.roomDesc = desc;
		} else {
			this.roomDesc = desc2;
		}
	}
	
	void setExits(String N, String S, String E, String W, String U, String D){
		this.N = N;
		this.S = S;
		this.E = E;
		this.W = W;
		this.U = U;
		this.D = D;
		exits[0] = N;
		exits[1] = S;
		exits[2] = E;
		exits[3] = W;
		exits[4] = U;
		exits[5] = D;
	}
	
	void riddle(){
		this.N = "belltower";
	}
	
	void bellRung(){
		this.N = "courtyard";
	}
	
	void setLock(String keyName){
		isLocked = true;
		this.keyName = keyName;
	}

	void setWater(){
		air = false;
	}
	boolean getAir() { return air; }
	String getRoomDesc() { return roomDesc; }
	String getTitle() { return title; }
	String getDesc() { return description; }
	String getExit(String dir){
		switch(dir){
		case "north": case "n": return this.N;
		case "south": case "s": return this.S;
		case "east": case "e": return this.E;
		case "west": case "w": return this.W;
		case "up": case "u": return this.U;
		case "down": case"d": return this.D;
		default: return "";
		}
	}
	
	static void setUpRooms(HashMap<String, Room> roomList){
		Room r = new Room("Castle Gates",
				"You are at the foot of a giant castle. \nThere are gates to the north"
				+ " that need to be opened. \nThere is a small shack to the east "
				+ "and a garden to the west. \nOther than that,"
				+ "you are surrounded by trees.", "");
		r.setExits("courtyard", "forest2", "lawn", "garden", "", "");
		roomList.put("gates", r);
		
		r = new Room("Front Lawn",
				"The front lawn to the west of the shack. There is a "
				+ "hanging wooden sign that says \"Shaq's Place\"",
				"The front lawn to the west of the shack and east of the castle gates.");
		r.setExits("", "forest1", "shack", "gates", "", "");
		roomList.put("lawn", r);
		
		r = new Room("Abandoned Shack","Owned by the one and only Shaquille O'Neal. Old and abandoned.\n"
				+ "There is an attic with accessed by a door above you, and fresh air to the west.", "");
		r.setExits("","","","lawn","attic","");
		roomList.put("shack", r);
		
		r = new Room("Shaq's Attic", 
				"Dusty and stuffy. Cobwebs everywhere and some old scuba gear sits on a chair.\n",
				"A dusty and old attic with a moldy cieling.");
		r.setExits("", "", "", "", "", "shack");
		r.setLock("Attic Key");
		roomList.put("attic", r);
		
		r = new Room("Royal Gardens", "The gardens owned by the king and his family.\n"
				+ "To the east is the entrance to the castle, and the cliff down leads to the castle moat.\n"
				+ "You see a spade in the dirt, and a few rocks.",
				"West of the castle goats, the garden is above the moat and is surrounded by trees.");
		r.setExits("", "forest1", "gates", "forest1", "", "moat");
		roomList.put("garden", r);
		
		r = new Room("Forest", "There are trees all around you, "
				+ "and animals thriving everywhere.", "");
		r.setExits("garden", "forest2", "gates", "forest1", "", "");
		roomList.put("forest1", r);
		
		r = new Room("Forest", "There are trees all around you, "
				+ "and animals thriving everywhere.", "");
		r.setExits("forest3", "forest3", "forest2", "forest1", "", "");
		roomList.put("forest2", r);
		
		r = new Room("Forest", "There are trees all around you,"
				+ "and animals thriving everywhere.\n"
				+ "You see a big blue area to the west, and a big looming rock to the north.", "");
		r.setExits("cEnter", "forest1", "forest4", "beach", "", "");
		roomList.put("forest3", r);
		
		r = new Room("Forest", "There are trees all around you, and animals thriving everywhere.", "");
		r.setExits("forest1", "forest4", "forest4", "forest4", "", "");
		roomList.put("forest4", r);
		
		r = new Room("Moat", "A rocky yet deep, watery moat. The watery passages go east and west.", "");
		r.setExits("", "", "lakebed", "moat", "garden", "");
		r.setWater();
		roomList.put("moat", r);

		r = new Room("Cave Entrance", "There is a cave to the north and forest all around you.","");
		r.setExits("cave", "forest2", "forest1", "forest3", "", "");
		roomList.put("cEnter", r);
		
		r = new Room("Cave", "A dank and dimly lit cave, the stalagmites are strong with this one.\n"
				+ "A crude old sword lies rusting on the ground.\n"
				+ "Above you can just make out a sliver of light.","A dank cave. There is light to the south and above.");
		r.setExits("", "cEnter", "", "", "mountain", "");
		roomList.put("cave", r);
		
		r = new Room("Mountain", "This treacherous landform provides no room for error, "
		+ "one wrong step up may end up being your last.","");
		r.setExits("", "", "", "", "mountainpeak", "cave");
		roomList.put("mountain", r);
		
		r = new Room("Mountain Peak", "The winds at the summit almost knock you off balance."
				+ "The bell is in reach","");
		r.setExits("", "", "", "", "", "mountain");
		roomList.put("mountainpeak", r);
		
		r = new Room("Mountain Peak", "The winds at the summit almost knock you off balance."
				+ "An old bell is in sight just to the north"
				+ "A Troll emerges from the shadows and declares:"
				+ " \"This bell will open the castle gates if rung however you must answer my riddle correcly in order to pass.\""
				+ "In a new castle building containing 100 rooms.\n A painter is hired to paint the numbers 1-100 on the doors.\n How many times will he have to paint the number 8?", "");
				//Answer is 20 ... 8,18,28,38,48,58,68,78,80,81,82,83,84,85,86,87,88,89,98
		r.setExits("belltower", "", "", "", "", "mountain");
		roomList.put("mountainpeak", r);

		r = new Room("Belltower", "There is nothring here besides a large old bell.","");
		r.setExits("", "mountainpeak", "", "", "", "");
		roomList.put("belltower", r);
		
		r = new Room("Beach", "The shore of a big lake. Maybe you can go in the water?\n"
				+ "A rusty key lays buried in the sand, and a seagull says \"Caw!\" at your approach.",
				"The shore of a big lake, with forest to the east and water to the west.");
		r.setExits("beach", "beach", "forest2", "lake1", "", "");
		roomList.put("beach", r);
		
		r = new Room("Lake", "You are underwater, you can't see that far.","");
		r.setExits("lake1", "lake1", "beach", "", "beach", "lakebottom");
		r.setWater();
		roomList.put("lake1", r);
		
		r = new Room("Lake Bed",
				"The sand beneath your feet and dense water are"
				+ "pretty neat. You might want to swim to the surface soon.\n"
				+ "You see a locked ship. What does it contain?", "The water is too dense to move far, but you can swim up,"
						+ " and a ship lays in the sand.");
		r.setExits("ship", "", "", "", "lake1", "");
		r.setWater();
		roomList.put("lakebed", r);
		
		r = new Room("Royal Navy Ship",
				"The room floods around you as you enter the secret cavern. "
				+ "You spot a gold-plated key, definitely of high priority, as well as ",
				"There are several compartments, but there is only one exit to the south.");
		r.setWater();
		r.setLock("Ship Key");
		r.setExits("", "", "", "", "", "");
		roomList.put("ship", r);
		
		r = new Room("Courtyard", "You have finally entered the castle, but a door blocks your way to the king's lair. \n"
				+ "To the wast is the market, and east is the knights' tower.", "");
		r.setExits("king", "gates", "tower", "market", "", "");
		roomList.put("courtyard", r);
		
		r = new Room("Farmer's Market", "An abandoned market, with old, rotting food in various merchant stands. \n"
				+ "There lays an abandoned egg in a stack of hay.", 
				"An old, abandoned marketplace. There is a path leading south to the courtyard, and a door to the east.");
		r.setExits("", "courtyard", "tower", "", "", "");
		roomList.put("market", r);
		
		r = new Room("Tower of Knights", "This tower is filled with defenses of every kind in order to protect the king. You spot a key dangling from a chain.\n"
				+ "A staircase leads up to the roof, while a dark passage downward looks untrustworthy.\n"
				+ "The door west leads to the marketplace, while the south door leads to the courtyard.",
				"This tower of defense has a staircase leading up as well as down, and doorways leading west and south.");
		r.setExits("","courtyard","","market","outlook","catacombs1");
		roomList.put("tower", r);
		
		r = new Room("Catacombs", "As you walk into the room, you notice the air thickening and the door slamming shut behind you."
				+ "The catacombs are wicked and stained with ancient blood and littered with rusted chains.\n", 
				"These passages seem to go on forever.");
		r.setExits("catacombs2", "catacombs2", "catacombs1", "catacombs1", "", "");
		roomList.put("catacombs1", r);
		
		r = new Room("Catacombs", "These passages seem to go on forever. I don't think there's a way out.", "");
		r.setExits("catacombs1", "catacombs2", "catacombs3", "catacombs1", "", "");
		roomList.put("catacombs2", r);
		
		r = new Room("Catacombs", "These passages seem to go on forever.", "");
		r.setExits("catacombs1", "secret", "catacombs2", "catacombs1", "", "");
		roomList.put("catacombs3", r);
		
		r = new Room("Super Secret Chamber of Suspicious Secrets\n", 
				"As you exit the darkness of the catacombs, you enter more darkness.\n"
				+ "You spot a vial of reisen resting on a table.\nThere is a passage south.",
				"There is an exit to the south of this dark, secret room.");
		r.setExits("","cave","","","","");
		roomList.put("secret", r);
		
		r = new Room("King's Quarters", "The kings beautiful quarters are lavish and plated with gold.\n"
				+  "The unrightful king lies sleeping in his bed, you know what to do","");
		r.setExits("", "courtyard", "lavatory", "", "", "");
		r.setLock("Knig's Key");
		roomList.put("king", r);
		
		r = new Room("Kings's lavatory", "This extravagant bathroom has a golden toilet!\n","");
		r.setExits("","","", "king", "", "");
		roomList.put("lavatory", r);
		
		r = new Room("Knight's Outlook",
				"The overhead post of the royal knights, but it is empty now.\n"
				+"You see a crossbow and a few bolts, as well as a.. teddy bear?", 
				"The overhead post of the royal knights. A staircase leads downward.");
		r.setExits("", "", "", "", "", "tower");
		roomList.put("outlook", r);
	}
}
